namespace fb;

table Backup {
  name: string;
  seed: string;
  index: uint32;
  sk: string;
  fvk: string;
  uvk: string;
  tsk: string;
  birth: uint32;
  saved: bool;
}

table TransactionInfo {
  id: uint32;
  txid: string;
  height: uint32;
  confirmations: uint32;
  timestamp: uint32;
  amount: int64;
  address: string;
  contact: string;
  memo: string;
}

table TransactionInfoExtended {
  height: uint32;
  timestamp: uint32;
  txid: [uint8];
  tins: [InputTransparent];
  touts: [OutputTransparent];
  sins: [InputShielded];
  souts: [OutputShielded];
  oins: [InputShielded];
  oouts: [OutputShielded];
}

table InputTransparent {
  txid: [uint8];
  vout: uint32;
  address: string;
  value: uint64;
}

table OutputTransparent {
  address: string;
  value: uint64;
}

table InputShielded {
  nf: [uint8];
  address: string;
  value: uint64;
  rcm: [uint8];
  rho: [uint8];
}

table OutputShielded {
  incoming: bool;
  cmx: [uint8];
  address: string;
  value: uint64;
  rcm: [uint8];
  rho: [uint8];
  memo: string;
}

table ShieldedNote {
  id_note: uint32;
  height: uint32;
  confirmations: uint32;
  timestamp: uint32;
  value: uint64;
  orchard: bool;
  excluded: bool;
}

table ShieldedMessage {
  id_msg: uint32;
  account: uint32;
  id_tx: uint32;
  txid: [uint8];
  height: uint32;
  timestamp: uint32;
  incoming: bool;
  nout: uint32;
  memo: UserMemo;
  read: bool;
}

table UAReceivers {
  tex: bool;
  transparent: string;
  sapling: string;
  orchard: string;
}

table Recipient {
  address: string;
  amount: uint64;
  pools: uint8;
  memo: UserMemo;
  memo_bytes: [uint8];
}

table PaymentRequest {
  recipients: [Recipient];
  src_pools: uint8;
  sender_pay_fees: bool;
  use_change: bool;
  height: uint32;
  expiration: uint32;
}

table AccountName {
  coin: uint8;
  id: uint32;
  key_type: uint8;
  name: string;
  birth: uint32;
  balance: uint64;
}

table ContactCard {
  id: uint32;
  account: uint32;
  name: string;
  address: string;
  saved: bool;
}

table TransactionRecipient {
  address: string;
  amount: uint64;
  change: bool;
}

table TransactionSummary {
  height: uint32;
  recipients: [TransactionRecipient];
  transparent_ins: uint64;
  sapling_net: int64;
  orchard_net: int64;
  fee: uint64;
  privacy_level: uint8;
  num_inputs: [uint8];
  num_outputs: [uint8];
  data: [uint8];
  keys: [uint8];
}

table AGEKeys {
  public_key: string;
  secret_key: string;
}

table Balance {
  transparent: uint64;
  sapling: uint64;
  orchard: uint64;
}

table Packet {
  data: [uint8];
}

table Packets {
  packets: [Packet];
  len: uint32;
}

table Checkpoint {
  height: uint32;
  hash: [uint8];
  timestamp: uint32;
}

table Spending {
  recipient: string;
  amount: uint64;
}

table Progress {
  trial_decryptions: uint32;
  downloaded: uint64;
  height: uint32;
  timestamp: uint32;
}

table UserMemo {
  reply_to: bool;
  sender: string;
  recipient: string;
  body: string;
  subject: string;
}

table ZIP32Keys {
  tsk: string;
  taddress: string;
  zsk: string;
  zaddress: string;
}

table Config {
  db_path: string;
  lwd_url: string;
  warp_url: string;
  warp_end_height: uint32;
  confirmations: uint32;
  regtest: bool;
}

table AccountSigningCapabilities {
  seed: bool;
  transparent: uint8;
  sapling: uint8;
  orchard: uint8;
}

table SchemaVersion {
  major: uint8;
  minor: uint8;
}

table ZipDbConfig {
  directory: string;
  file_list: [string];
  target_path: string;
  public_key: string;
}
